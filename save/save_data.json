{
    "premises-NL": [
        "If a Python code is well-tested, then the project is optimized.",
        "If a Python code does not follow PEP 8 standards, then it is not well-tested.",
        "All Python projects are easy to maintain.",
        "All Python code is well-tested.",
        "If a Python code follows PEP 8 standards, then it is easy to maintain.",
        "If a Python code is well-tested, then it follows PEP 8 standards.",
        "If a Python project is well-structured, then it is optimized.",
        "If a Python project is easy to maintain, then it is well-tested.",
        "If a Python project is optimized, then it has clean and readable code.",
        "All Python projects are well-structured.",
        "All Python projects have clean and readable code.",
        "There exists at least one Python project that follows best practices.",
        "There exists at least one Python project that is optimized.",
        "If a Python project is not well-structured, then it does not follow PEP 8 standards."
    ],
    "premises-FOL": [
        "\u2200x (WT(x) \u2192 O(x))",
        "\u2200x (\u00acPEP8(x) \u2192 \u00acWT(x))",
        "\u2200x (EM(x))",
        "\u2200x (WT(x))",
        "\u2200x (PEP8(x) \u2192 EM(x))",
        "\u2200x (WT(x) \u2192 PEP8(x))",
        "\u2200x (WS(x) \u2192 O(x))",
        "\u2200x (EM(x) \u2192 WT(x))",
        "\u2200x (O(x) -> CR(x))",
        "\u2200x (WS(x))",
        "\u2200x (CR(x))",
        "\u2203x (BP(x))",
        "\u2203x (O(x))",
        "\u2200x (\u00acWS(x) \u2192 \u00acPEP8(x))"
    ],
    "questions": [
        "\n1  If a Python project is not optimized, then it is not well-tested. \n1  If all Python projects are optimized, then all Python projects are well-structured. \n1  If a Python project is well-tested, then it is clean and readable. \n1  If a Python project is not optimized, then it does not follow PEP 8 standards..",
        "if all Python projects are well-structured, then all Python projects are optimized.."
    ],
    "answers": [
        "A",
        "Yes"
    ],
    "idx": [
        [
            1
        ],
        [
            7,
            10
        ]
    ],
    "explanation": [
        "Premise 1 states that if a Python project is well-tested, it is optimized. By logical contraposition, if a project is not optimized, it is not well-tested, supporting option A with the fewest premises. Option B is false because optimization does not imply well-structured projects. Option C follows from premises 4, 1, and 9 but requires more steps. Option D follows from premises 1 and 6 but is less direct than A.",
        "Premise 10 confirms all Python projects are well-structured. Premise 7 states that well-structured projects are optimized, implying all projects are optimized, so the statement that well-structured projects imply optimized projects holds."
    ],
    "fol_pred_dic": {
        "follow pep 8 standards": "follow pep 8 standards:::SeldomViolatesPEP8Standards(x)",
        "maintain": "maintain:::Maintains(x)",
        "follows best practices": "follows best practices:::FollowsBestPractices(x)",
        "optimized": "optimized:::IsOptimized(x)",
        "has clean and readable code": "has clean and readable code:::HasCleanReadableCode(x)",
        "is well - tested": "is well - tested:::IsWellTested(x)",
        "structured": "structured:::IsStructured(x)"
    },
    "premise_pred_dic": {
        "if a python code is well-tested, then the project is optimized.": [
            "is well - tested",
            "optimized"
        ],
        "if a python code does not follow pep 8 standards, then it is not well-tested.": [
            "follow pep 8 standards",
            "is well - tested"
        ],
        "all python projects are easy to maintain.": [
            "maintain"
        ],
        "all python code is well-tested.": [
            "is well - tested"
        ],
        "if a python code follows pep 8 standards, then it is easy to maintain.": [
            "follow pep 8 standards",
            "maintain"
        ],
        "if a python code is well-tested, then it follows pep 8 standards.": [
            "is well - tested",
            "follow pep 8 standards"
        ],
        "if a python project is well-structured, then it is optimized.": [
            "structured",
            "optimized"
        ],
        "if a python project is easy to maintain, then it is well-tested.": [
            "maintain",
            "is well - tested"
        ],
        "if a python project is optimized, then it has clean and readable code.": [
            "optimized",
            "has clean and readable code"
        ],
        "all python projects are well-structured.": [
            "structured"
        ],
        "all python projects have clean and readable code.": [
            "has clean and readable code"
        ],
        "there exists at least one python project that follows best practices.": [
            "follows best practices"
        ],
        "there exists at least one python project that is optimized.": [
            "optimized"
        ],
        "if a python project is not well-structured, then it does not follow pep 8 standards.": [
            "structured",
            "follow pep 8 standards"
        ],
        " If a Python project is not optimized, then it is not well-tested. ": [
            "optimized",
            "is well - tested"
        ],
        " If all Python projects are optimized, then all Python projects are well-structured. ": [
            "optimized",
            "structured"
        ],
        " If a Python project is well-tested, then it is clean and readable. ": [
            "is well - tested",
            "has clean and readable code"
        ],
        " If a Python project is not optimized, then it does not follow PEP 8 standards..": [
            "optimized",
            "follow pep 8 standards"
        ],
        "if all Python projects are well-structured, then all Python projects are optimized..": [
            "structured",
            "optimized"
        ]
    },
    "subject_pred_dic": {
        "if a python code is well-tested, then the project is optimized.": "python_code",
        "if a python code does not follow pep 8 standards, then it is not well-tested.": "python_code",
        "all python projects are easy to maintain.": "python_code",
        "all python code is well-tested.": "python_code",
        "if a python code follows pep 8 standards, then it is easy to maintain.": "python_code",
        "if a python code is well-tested, then it follows pep 8 standards.": "python_code",
        "if a python project is well-structured, then it is optimized.": "python_code",
        "if a python project is easy to maintain, then it is well-tested.": "python_code",
        "if a python project is optimized, then it has clean and readable code.": "python_code",
        "all python projects are well-structured.": "python_code",
        "all python projects have clean and readable code.": "python_code",
        "there exists at least one python project that follows best practices.": "python_code",
        "there exists at least one python project that is optimized.": "python_code",
        "if a python project is not well-structured, then it does not follow pep 8 standards.": "python_code",
        " If a Python project is not optimized, then it is not well-tested. ": "python_code",
        " If all Python projects are optimized, then all Python projects are well-structured. ": "python_code",
        " If a Python project is well-tested, then it is clean and readable. ": "python_code",
        " If a Python project is not optimized, then it does not follow PEP 8 standards..": "python_code",
        "if all Python projects are well-structured, then all Python projects are optimized..": "python_code"
    },
    "fol_formula": {
        "if a python code is well-tested, then the project is optimized.": "IsWellTested(x) \u2192 IsOptimized(x)",
        "if a python code does not follow pep 8 standards, then it is not well-tested.": "\u2200 x (Python_code(x) \u2192 SeldomViolatesPEP8Standards(x) \u2192 IsWellTested(x))",
        "all python projects are easy to maintain.": "HoldsPhD(John)",
        "all python code is well-tested.": "\u2200 x : PythonCode(x) \u2192 IsWellTested(x)",
        "if a python code follows pep 8 standards, then it is easy to maintain.": "SeldomViolatesPEP8Standards(Python_code) \u2192 Maintains(Python_code)",
        "if a python code is well-tested, then it follows pep 8 standards.": "IsWellTested(x) \u2192 SeldomViolatesPEP8Standards(x)",
        "if a python project is well-structured, then it is optimized.": "Structured(x) \u2192 Optimized(x)",
        "if a python project is easy to maintain, then it is well-tested.": "Maintains(x) \u2192 IsWellTested(x)",
        "if a python project is optimized, then it has clean and readable code.": "\u2200 x [(IsOptimized(x) \u2192 HasCleanReadableCode(x))]",
        "all python projects are well-structured.": "\u2200 x. PythonCode(x) \u2192 IsStructured(x)",
        "all python projects have clean and readable code.": "\u2200 x (PythonProject(x) \u2192 HasCleanReadableCode(x))",
        "there exists at least one python project that follows best practices.": "\u2203x. PythonProject(x) \u2192 FollowsBestPractices(x)",
        "there exists at least one python project that is optimized.": "\u2203x (PythonCode(x) \u2227 IsOptimized(x))",
        "if a python project is not well-structured, then it does not follow pep 8 standards.": "Structured(python_code) \u2192 SeldomViolatesPEP8Standards(python_code)",
        " If a Python project is not optimized, then it is not well-tested. ": "\u2200 x (IsOptimized(x) \u2192 IsWellTested(x))",
        " If all Python projects are optimized, then all Python projects are well-structured. ": "\u2200 x (IsOptimized(x) \u2192 IsStructured(x))",
        " If a Python project is well-tested, then it is clean and readable. ": "IsWellTested(x) \u2192 HasCleanReadableCode(x)",
        " If a Python project is not optimized, then it does not follow PEP 8 standards..": "\u2200 x [(not IsOptimized(x)) \u2192 (not SeldomViolatesPEP8Standards(x))]",
        "if all Python projects are well-structured, then all Python projects are optimized..": "\u2200 x (IsStructured(x) \u2192 IsOptimized(x))"
    }
}